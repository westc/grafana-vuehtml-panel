{"version":3,"sources":["../src/ctrl.js"],"names":["SEL_DISABLE_DOWNLOAD_CSV","replace","DEFAULT_PANEL_SETTINGS","html","css","canDownloadDatasets","emType","refreshRate","REFRESH_RATE_OPTIONS","value","text","EM_TYPES","normalizeHasher","hasher","hasherType","row","JSON","stringify","map","item","VueHtmlPanelCtrl","$scope","$injector","$rootScope","_","defaultsDeep","panel","emIsContentHeight","events","on","onInitEditMode","bind","onDataError","onDataReceived","onViewModeChanged","onInitPanelActions","title","message","isMonospace","panelElement","append","JS","dom","style","display","alignItems","textAlign","height","$","cls","margin","color","actions","tablesSubmenu","find","toArray","reduce","carry","table","index","jQuery","is","push","getAttribute","icon","click","length","apply","divider","role","concat","datasetsSubmenu","dataset","data","raw","type","columns","refId","path","addEditorTab","logVueScope","html2canvas","then","canvas","href","toDataURL","download","formatDate","Date","datasetIndex","columnNames","csvContent","rows","cName","headers","blob","Blob","fileName","saveAs","isEditing","interval","setInterval","vue","clearInterval","console","log","rawTemplate","methods","jElemPC","size","width","Math","min","max","ctrl","element","elemPC","elem","random","render","myVue","vueScope","getVueScope","vueScopeData","filter","vueScopeMethods","extend","getVue","templateValues","template","stylesheet","styleParent","parentNode","removeChild","parse","className","trim","getAllDashboards","isSuccess","allDashboards","Vue","el","computed","refreshTimeout","clearTimeout","setTimeout","updateView","result","cloneDeep","dashboard","isPrimitive","datasets","datasetsById","getOptionsToRemember","themeType","config","theme","url","encode","encodeURIComponent","decode","decodeURIComponent","toParams","objValues","opt_prefixVar","Object","entries","arrParams","key","join","getTimeValues","opt_name","timeSrv","timeRangeForUrl","from","to","getTimeParams","getVarValues","opt_filter","opt_negate","arrFilter","some","RegExp","test","templateSrv","variables","values","variable","name","varValues","current","isAll","includeAll","getVarParams","offsetDateTZ","date","opt_tzOffset","getTimezoneOffset","onError","err","info","renderError","error","keyRows","has","indexRows","keys","uniqueKeys","uniq","rowIndex","realIndex","indexOf","event","statusText","dataList","datasetNames","forEach","datapoints","target","colNames","c","reduceRight","cell","cellIndex","slice","typeOf","scope","attrs","MetricsPanelCtrl","callback","getApiData","id","ajax","complete","responseJSON","errorHandler","vm","prototype","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as saveAs from './external/FileSaver.min.js';\nimport * as JS from './external/YourJS.JS.min';\nimport * as html2canvas from './external/html2canvas.min';\nimport { pseudoCssToJSON, toCSV, tableToArray } from './helper-functions';\nimport * as Vue from './external/vue.min';\nimport config from 'app/core/config';\n\nconst SEL_DISABLE_DOWNLOAD_CSV = '<llow-csv><ble-csv><llow-download><ble-download>'.replace(/<(.+?)>/g, ':not([data-disa$1])');\n\nconst DEFAULT_PANEL_SETTINGS = {\n  html: '<h2>Output of available datasets:</h2>\\n<div><pre>{{ JSON.stringify(dataset, null, 2) }}</pre></div>',\n  css: '& {\\n  overflow: auto;\\n}',\n  canDownloadDatasets: true,\n  emType: null,\n  refreshRate: null\n};\n\nconst REFRESH_RATE_OPTIONS = [\n  { value: null, text: 'Never' },\n  { value: 1, text: 'Every second' },\n  { value: 60, text: 'Every minute' }\n];\n\nconst EM_TYPES = [\n  { value: null, text: 'Default' },\n  { value: 'CONTENT-HEIGHT', text: 'Content Height' },\n  { value: 'CONTENT-WIDTH', text: 'Content Width' },\n  { value: 'CONTENT-MIN-DIM', text: 'Minimum Content Dimension' },\n  { value: 'CONTENT-MAX-DIM', text: 'Maximum Content Dimension' },\n  { value: 'CONTENT-AVG-DIM', text: 'Average of Content Dimensions' }\n];\n\nfunction normalizeHasher(hasher) {\n  let hasherType = typeof hasher;\n  return 'function' === hasherType\n    ? hasher\n    : 'string' === hasherType\n      ? row => JSON.stringify(row[hasher])\n      : row => JSON.stringify(hasher.map(item => row[item]));\n}\n\nexport class VueHtmlPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    // If panel.emIsContentHeight was used, convert it to panel.emType.\n    let { emIsContentHeight } = this.panel;\n    if (emIsContentHeight != null) {\n      this.panel.emType = emIsContentHeight ? 'CONTENT-HEIGHT' : null;\n      delete this.panel.emIsContentHeight;\n    }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('view-mode-changed', this.onViewModeChanged.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    \n    // Additional events that we can hook into...\n    // this.events.on('component-did-mount', this.onComponentDidMount.bind(this));\n    // this.events.on('panel-size-changed', this.onPanelSizeChanged.bind(this));\n    // this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    // this.events.on('refresh', this.onRefresh.bind(this));\n    // this.events.on('render', this.onRender.bind(this));\n  }\n\n  renderError(title, message, isMonospace) {\n    this.panelElement.html('').append(JS.dom({\n      _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n        {\n          _: 'div',\n          cls: 'alert alert-error',\n          style: { margin: '0px auto' },\n          $: {\n            _: 'div',\n            $: [\n              { _: 'h2', style: { color: '#FFF' }, text: title },\n              { _: isMonospace ? 'pre' : 'div', text: message }\n            ]\n          }\n        }\n      ]\n    }));\n  }\n\n  /**\n   * Executed when panel actions should be loaded.\n   * @param {*} actions Actions to be added.\n   */\n  onInitPanelActions(actions) {\n    let tablesSubmenu = this.panelElement.find('table').toArray().reduce(\n      (carry, table, index) => {\n        if (jQuery(table).is(SEL_DISABLE_DOWNLOAD_CSV)) {\n          carry.push({\n            text: table.getAttribute('data-title') ? `Export \"${table.getAttribute('data-title')}\" As CSV` : `Export Table #${index + 1} As CSV`,\n            icon: 'fa fa-fw fa-table',\n            click: `ctrl.csvifyTable(${index})`\n          });\n        }\n        return carry;\n      },\n      []\n    );\n    if (tablesSubmenu.length) {\n      actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(tablesSubmenu));\n    }\n\n    if (this.panel.canDownloadDatasets) {\n      let datasetsSubmenu = this.dataset.reduce((carry, data, index) => {\n        let raw = data.raw;\n        if (raw.type === 'table' && raw.columns.length) {\n          carry.push({\n            text: `Export Dataset \"${raw.refId}\" As CSV`,\n            icon: 'fa fa-fw fa-database',\n            click: `ctrl.csvifyDataset(${index})`\n          });\n        }\n        return carry;\n      }, []);\n      if (datasetsSubmenu.length) {\n        actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(datasetsSubmenu));\n      }\n    }\n\n    actions.push({\n      text: 'Screenshot As PNG',\n      icon: 'fa fa-fw fa-image',\n      click: 'ctrl.downloadPNG()'\n    });\n  }\n\n  /**\n   * Executed before showing edit mode.\n   */\n  onInitEditMode() {\n    let path = 'public/plugins/westc-vuehtml-panel/partials/';\n    this.addEditorTab('Editor', `${path}editor.html`, 1);\n  }\n\n  /**\n   * Executed when the view mode of the panel changes between edit and view.\n   */\n  onViewModeChanged() {\n    this.logVueScope();\n  }\n\n  downloadPNG() {\n    html2canvas(this.panelElement.find('div')[0]).then(canvas => {\n      JS.dom({\n        _: 'a',\n        href: canvas.toDataURL(),\n        download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + '.screenshot.png'\n      }).click();\n    });\n  }\n\n  csvifyDataset(datasetIndex) {\n    let data = this.dataset[datasetIndex];\n    let { columnNames } = data;\n\n    let csvContent = toCSV(\n      data.rows.map(row => columnNames.map(cName => row[cName])),\n          { headers: columnNames }\n    );\n    let blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\n    let fileName = this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.dataset-${data.raw.refId}.csv`;\n    saveAs(blob, fileName);\n  }\n\n  csvifyTable(index) {\n    let table = this.panelElement.find('table').toArray()[index];\n    let title = table.getAttribute('data-title') || (this.panel.title + ` Table ${index + 1}`);\n    let blob = new Blob([toCSV(tableToArray(table))], { type: 'text/csv;charset=utf-8' });\n    let fileName = title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.csv`;\n    saveAs(blob, fileName);\n  }\n\n  /**\n   * Adds the Vue scope to the console log if in editing mode.\n   */\n  logVueScope() {\n    // If in editing mode show the html scope.\n    if (this.panel.isEditing) {\n      let interval = setInterval(_ => {\n        if (this.vue) {\n          clearInterval(interval);\n          console.log('Available data values:', this.vue.rawTemplate.data);\n          console.log('Available methods:', this.vue.rawTemplate.methods);\n        }\n      }, 250);\n    }\n  }\n\n  render() {\n    // If an `em` unit is supposed to be based on the size of the content area\n    // make sure to recalculate it.\n    let jElemPC = this.panelElement;\n    let { emType } = this.panel;\n    let size =\n      'CONTENT-HEIGHT' === emType\n        ? jElemPC.height()\n        : 'CONTENT-WIDTH' === emType\n          ? jElemPC.width()\n          : 'CONTENT-MIN-DIM' === emType\n            ? Math.min(jElemPC.height(), jElemPC.width())\n            : 'CONTENT-MAX-DIM' === emType\n              ? Math.max(jElemPC.height(), jElemPC.width())\n              : 'CONTENT-AVG-DIM' === emType\n                ? (jElemPC.height() + jElemPC.width()) / 2\n                : null;\n    jElemPC.css('font-size', size != null ? size + 'px' : '');\n  }\n\n  /**\n   * Should only be called when the panel should re-rendered fresh.  Not defined\n   * as render because there is no need to re-render every time the window\n   * resizes or the panel resizes.\n   */\n  updateView() {\n    let ctrl = this;\n    let { panel } = ctrl;\n    let { refreshRate } = panel;\n    \n    let jElemPC = ctrl.element;\n    let elemPC = jElemPC[0];\n    let elem = JS.dom({ _: 'div' });\n    let cls = ('_' + Math.random()).replace(/0\\./, +new Date);\n    \n    ctrl.render(); // Recalculates `em` size if it is supposed to.\n    \n    // Data available to the HTML code.\n    let myVue = ctrl.vue;\n    let vueScope = ctrl.getVueScope();\n    let vueScopeData = JS.filter(vueScope, value => 'function' !== typeof value);\n    let vueScopeMethods = _.extend(\n      JS.filter(vueScope, value => 'function' === typeof value),\n      {\n        getVue() {\n          return myVue;\n        }\n      }\n    );\n\n    let templateValues = {\n      template: `<div>${panel.html}</div>`,\n      data: vueScopeData,\n      methods: vueScopeMethods\n    };\n\n    // Remove the old stylesheet from the document if it exists.\n    let stylesheet = ctrl.stylesheet;\n    let styleParent = stylesheet && stylesheet.parentNode;\n    if (styleParent) {\n      styleParent.removeChild(stylesheet);\n    }\n\n    // Add the nested CSS to the panel.\n    ctrl.stylesheet = JS.css(JSON.parse(pseudoCssToJSON(panel.css)), '.' + cls);\n\n    elemPC.className = elemPC.className.replace(/(^|\\s+)_\\d+(?=\\s+|$)/g, ' ').trim() + ' ' + cls;\n\n    // Gets all dashboards via the API.\n    getAllDashboards((data, isSuccess) => {\n      if (isSuccess) {\n        myVue.rawTemplate.data.allDashboards = data;\n      }\n    });\n\n    if (myVue) {\n      _.extend(myVue.rawTemplate, templateValues);\n    }\n    else {\n      jElemPC.html('').append(elem);\n\n      myVue = ctrl.vue = new Vue({\n        el: elem,\n        template: `<div :is=\"template\"></div>`,\n        data() {\n          return {\n            rawTemplate: templateValues\n          };\n        },\n        computed: {\n          template() {\n            let { template, data, methods } = this.rawTemplate;\n            return {\n              template,\n              data: function () {\n                return data;\n              },\n              methods\n            };\n          }\n        }\n      });\n    }\n\n    if (refreshRate > 0 && ~~refreshRate === refreshRate) {\n      // Make sure that panel only gets refreshed according to the specified\n      // interval.\n      if (ctrl.refreshTimeout) {\n        clearTimeout(ctrl.refreshTimeout);\n        ctrl.refreshTimeout = null;\n      }\n\n      ctrl.refreshTimeout = setTimeout(function () {\n        // Only update if the refresh rate remains unchanged\n        if (refreshRate === ctrl.panel.refreshRate) {\n          ctrl.updateView();\n        }\n      }, refreshRate * 1e3);\n    }\n  }\n\n  /**\n   * Gets the object containing the variables available to the Vue HTML.\n   * @returns {Object}\n   *   The Vue scope that is made available to the Vue HTML.\n   */\n  getVueScope() {\n    let ctrl = this;\n\n    let result = _.cloneDeep({\n      allDashboards: [],\n      dashboard: JS.filter(ctrl.dashboard, value => JS.isPrimitive(value)),\n      dataset: ctrl.dataset,\n      datasets: ctrl.datasets,\n      datasetsById: ctrl.datasetsById,\n      panel: ctrl.panel.getOptionsToRemember(),\n      JS,\n      themeType: config.theme.type,\n      url: {\n        encode(value) {\n          return encodeURIComponent(value + '').replace(/%20/g, '+');\n        },\n        decode(value) {\n          return decodeURIComponent((value + '').replace(/\\+/g, '%20'));\n        },\n        toParams(objValues, opt_prefixVar) {\n          return Object.entries(objValues).reduce((arrParams, [key, value]) => {\n            return arrParams.concat(\n              JS.toArray(value).map(\n                value => this.encode((opt_prefixVar ? 'var-' : '') + key) + '=' + this.encode(value)\n              )\n            );\n          }, []).join('&');\n        },\n        getTimeValues(opt_name) {\n          let result = {};\n          let { from, to } = ctrl.timeSrv.timeRangeForUrl();\n          if (opt_name != 'to') {\n            result.from = from;\n          }\n          if (opt_name != 'from') {\n            result.to = to;\n          }\n          return result;\n        },\n        getTimeParams(opt_name) {\n          return this.toParams(this.getTimeValues(opt_name));\n        },\n        getVarValues(opt_filter, opt_negate) {\n          if (opt_filter && 'function' !== typeof opt_filter) {\n            let arrFilter = JS.toArray(opt_filter);\n            opt_filter = key => arrFilter.some(\n              filter => filter instanceof RegExp ? filter.test(key) : (filter == key)\n            );\n          }\n          \n          return ctrl.templateSrv.variables.reduce(\n            (values, variable) => {\n              // At times current.value is a string and at times it is an array.\n              let key = variable.name;\n              let varValues = JS.toArray(variable.current.value);\n              let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n              varValues = isAll ? [variable.current.text] : varValues;\n              if (opt_filter) {\n                varValues = varValues.filter(value => !!opt_filter(key, value) === !opt_negate);\n              }\n              if (varValues.length) {\n                values[key] = varValues;\n              }\n              return values;\n            },\n            {}\n          );\n        },\n        getVarParams(opt_filter, opt_negate) {\n          return this.toParams(this.getVarValues(opt_filter, opt_negate), true);\n        }\n      },\n      offsetDateTZ(date, opt_tzOffset) {\n        date = new Date(date);\n        opt_tzOffset = opt_tzOffset == null ? date.getTimezoneOffset() : opt_tzOffset;\n        return new Date(+date + opt_tzOffset * 6e4);\n      },\n      onError(err, info) {\n        ctrl.renderError('VueJS Error', err.message, true);\n        console.error('VueHtmlPanelCtrl error:', { err, info });\n      },\n      keyRows(rows, hasher) {\n        hasher = normalizeHasher(hasher);\n        return rows.reduce((carry, row) => {\n          let key = hasher(row);\n          carry[key] = _.has(carry, key) ? carry[key].concat([row]) : [row];\n          return carry;\n        }, {});\n      },\n      indexRows(rows, hasher) {\n        hasher = normalizeHasher(hasher);\n        let keys = rows.map(row => hasher(row));\n        let uniqueKeys = _.uniq(keys);\n        return rows.reduce((carry, row, rowIndex) => {\n          let realIndex = uniqueKeys.indexOf(keys[rowIndex]);\n          carry[realIndex] = _.has(carry, realIndex) ? carry[realIndex].concat([row]) : [row];\n          return carry;\n        }, []);\n      }\n    });\n    \n    return result;\n  }\n\n  onDataError(event) {\n    this.renderError(event.statusText, event.data.message, true);\n  }\n\n  /**\n   * Executed whenever data is received from the database for this panel.\n   * @param {Array} dataList \n   *   An array of objects containing the data that is collected from the\n   *   database.\n   */\n  onDataReceived(dataList) {\n    this.datasets = this.dataset = [];\n    this.datasetsById = {};\n\n    if (dataList) {\n      let datasetNames = [];\n\n      dataList.forEach(data => {\n        let { refId, datapoints, target, columns, rows } = data;\n        let datasetIndex = datasetNames.indexOf(refId);\n        let dataset;\n\n        if (data.type === 'table') {\n          let colNames = columns.map(c => 'string' === typeof c ? c : c.text);\n\n          this.datasetsById[refId] = dataset = {\n            columnNames: colNames,\n            rows: rows.map(row => {\n              return row.reduceRight((carry, cell, cellIndex) => {\n                carry[colNames[cellIndex]] = cell;\n                return carry;\n              }, {});\n            }),\n            raw: data\n          };\n        }\n        else {\n          dataset = this.datasetsById[refId] = this.datasetsById[refId]\n            || { columnNames: ['value', 'time', 'metric'], rows: [], raw: [], refId };\n\n          datapoints.forEach(row => {\n            dataset.rows.push(row.slice(0, 2).concat([target]));\n          });\n\n          if (JS.typeOf(dataset.raw) === 'Array') {\n            dataset.raw.push(data);\n          }\n        }\n\n        if (datasetIndex < 0) {\n          datasetIndex = datasetNames.push(refId) - 1;\n          this.datasets[datasetIndex] = this.dataset[datasetIndex] = dataset;\n        }\n      });\n    }\n\n    this.updateView();\n    this.logVueScope();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n  }\n}\n\nfunction getAllDashboards(callback) {\n  getApiData(`search`, callback);\n}\n\nfunction getApiData(id, callback) {\n  jQuery.ajax(`/api/${id}`, {\n    complete(result, statusText) {\n      callback(result.responseJSON || result, statusText === 'success');\n    }\n  });\n}\n\n// Allows for error handling in vueToHTML().\nVue.config.errorHandler = (err, vm, info) => {\n  if (vm && vm.onError) {\n    vm.onError(err, info);\n  }\n};\n\nVueHtmlPanelCtrl.prototype.REFRESH_RATE_OPTIONS = REFRESH_RATE_OPTIONS;\nVueHtmlPanelCtrl.prototype.EM_TYPES = EM_TYPES;\n\nVueHtmlPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}